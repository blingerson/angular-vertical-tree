"use strict";var _extends=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e};angular.module("drg.angularVerticalTree",[]).directive("verticalTree",["$compile","$templateCache","$timeout",function(e,r,t){return{restrict:"EA",scope:{items:"<treeItems",treeOpts:"<",open:"&onOpen",select:"&onSelect"},controller:"vTreeCtrl",compile:function(n){var a=n.find("vertical-tree-breadcrumb"),l=n.find("vertical-tree-leaf");return a=a&&a.length>0?a.html():"",l=l&&l.length>0?l.html():"",n.empty(),{pre:function(t,n){t.templates={breadcrumb:"drg/vTreeBreadcrumb"+t.$id+".tpl.html",leaf:"drg/vTreeLeaf"+t.$id+".tpl.html"},r.put(t.templates.breadcrumb,a),r.put(t.templates.leaf,l),n.html(e(r.get("drg/angularVerticalTree.tpl.html"))(t))},post:function(e,r){e.updateBranchHeight=function(){t(function(){var e=r.children().eq(0),t=e.find(".v-tree-breadcrumb"),n=t.toArray().reduce(function(e,r){return e+$(r).outerHeight()},0);e.find(".v-tree-branch").css("height","calc(100% - "+n+"px)")})},e.updateBranchHeight()}}}}}]).controller("vTreeCtrl",["$scope",function(e){function r(e,t){return angular.forEach(t,function(t,n){angular.isObject(t)?e[n]?e[n]=r(angular.isObject(e[n])?e[n]:{},t):e[n]=angular.copy(t):e[n]=t}),e}function t(){return s.idProp?e.breadcrumbs.slice(1).map(function(e){return e[s.idProp]}):[]}function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];if(a(),s.idProp)for(var r=o,t=0;t<e.length;t++){for(var n=!1,l=e[t],i=r[s.children],u=0;u<i.length;u++){var d=i[u];if(d[s.idProp]===l&&s.isFolder(d)){c(d),r=d,n=!0;break}}if(!n)break}}function a(){e.breadcrumbs=[o]}function l(){var r=e.breadcrumbs[e.breadcrumbs.length-1];if(!r)return[];var t=r[e.opts.children];return t?t.filter(e.opts.isLeaf):[]}function c(r){e.breadcrumbs.push(r),e.leaves=l(),e.updateBranchHeight(),e.$emit("verticalTree.openFolder",r),e.open&&e.open({folder:r})}function i(r){e.$emit("verticalTree.selectItem",r),e.select&&e.select({item:r})}var s=e.opts=r({root:"Root",idProp:void 0,label:"label",children:"children",classes:{container:"panel panel-default",breadcrumb:"panel-heading",branch:"list-group",leaf:"list-group-item"},emptyMessage:"",isLeaf:function(){return!0},isFolder:function(e){return e[this.children]&&e[this.children].length>0}},e.treeOpts),o={};angular.isObject(e.opts.root)?o=angular.copy(e.opts.root):o[e.opts.label]=e.opts.root,_extends(e,{breadcrumbs:[],leaves:[],leafClickHandler:function(r){e.opts.isFolder(r)?c(r):e.opts.isLeaf(r)&&i(r)},breadcrumbClickHandler:function(r,t){e.breadcrumbs.splice(t,e.breadcrumbs.length-t),c(r)}}),a(),e.$watch("items",function(){o[s.children]=e.items,n(t())}),e.$watchCollection("breadcrumbs[ breadcrumbs.length - 1 ][ opts.children ]",function(){e.leaves=l()}),e.$on("vTree.setPath",function(e,r){return n(r)})}]),angular.module("drg.angularVerticalTree").run(["$templateCache",function(e){e.put("drg/angularVerticalTree.tpl.html",'<!-- .panel by default -->\n<div class="v-tree-container" ng-class="opts.classes.container">\n\n    <!-- .panel-heading by default -->\n    <a class="v-tree-breadcrumb"\n       href="javascript:;"\n       ng-class="opts.classes.breadcrumb"\n       ng-click="breadcrumbClickHandler( breadcrumb, $index )"\n       ng-include="templates.breadcrumb"\n       ng-repeat="breadcrumb in breadcrumbs track by ( opts.idProp ? breadcrumb[ opts.idProp ] : $index )"\n       style="display: block;">\n    </a>\n\n    <!-- .list-group by default -->\n    <div class="v-tree-branch" ng-class="opts.classes.branch">\n        <!-- .list-group-item by default -->\n        <a class="v-tree-leaf"\n           href="javascript:;"\n           ng-class="opts.classes.leaf"\n           ng-click="leafClickHandler( leaf )"\n           ng-include="templates.leaf"\n           ng-repeat="leaf in leaves track by ( opts.idProp ? leaf[ opts.idProp ] : $index )">\n        </a>\n        <p class="v-tree-empty" ng-if="!leaves || !leaves.length" ng-bind="opts.emptyMessage"></p>\n    </div>\n\n</div>\n')}]);